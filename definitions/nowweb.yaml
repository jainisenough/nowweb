paths:
  /Containers:
    get:
      tags:
        - Container
      operationId: Container.getContainers
      parameters: []
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/x-any'
      deprecated: false
    post:
      tags:
        - Container
      operationId: Container.createContainer
      parameters:
        - name: options
          in: body
          required: false
          schema:
            type: object
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Containers/{container}':
    delete:
      tags:
        - Container
      operationId: Container.destroyContainer
      parameters:
        - name: container
          in: path
          required: false
          type: string
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              undefined:
                type: object
      deprecated: false
    get:
      tags:
        - Container
      operationId: Container.getContainer
      parameters:
        - name: container
          in: path
          required: false
          type: string
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  '/Containers/{container}/files':
    get:
      tags:
        - Container
      operationId: Container.getFiles
      parameters:
        - name: container
          in: path
          required: false
          type: string
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/x-any'
      deprecated: false
  '/Containers/{container}/files/{file}':
    get:
      tags:
        - Container
      operationId: Container.getFile
      parameters:
        - name: container
          in: path
          required: false
          type: string
        - name: file
          in: path
          required: false
          type: string
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    delete:
      tags:
        - Container
      operationId: Container.removeFile
      parameters:
        - name: container
          in: path
          required: false
          type: string
        - name: file
          in: path
          required: false
          type: string
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              undefined:
                type: object
      deprecated: false
  '/Containers/{container}/upload':
    post:
      tags:
        - Container
      operationId: Container.upload
      parameters: []
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              result:
                type: object
      deprecated: false
  '/Containers/{container}/download/{file}':
    get:
      tags:
        - Container
      operationId: Container.download
      parameters:
        - name: container
          in: path
          required: false
          type: string
        - name: file
          in: path
          required: false
          type: string
      responses:
        '204':
          description: Request was successful
      deprecated: false
definitions:
  x-any:
    properties: {}
basePath: /api
swagger: '2.0'
info:
  x-ibm-name: nowweb
  version: 1.0.0
  title: nowweb
schemes:
  - https
host: $(catalog.host)
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  clientIdHeader:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
  clientSecretHeader:
    in: header
    name: X-IBM-Client-Secret
    type: apiKey
security:
  - clientIdHeader: []
    clientSecretHeader: []
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  catalogs:
    apic-dev:
      properties:
        runtime-url: $(TARGET_URL)
    sb:
      properties:
        runtime-url: 'http://localhost:4001'
  assembly:
    execute:
      - invoke:
          target-url: $(runtime-url)$(request.path)$(request.search)
